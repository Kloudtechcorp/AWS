//----------------------------------------Include the ESP32 Libraries
#include <WiFi.h>
#include <WebServer.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
//----------------------------------------

#include "PageIndex.h" //--> Include the contents of the User Interface Web page, stored in the same folder as the .ino file

//----------------------------------------SSID and Password of your WiFi router
const char* ssid = "KT 2.4";
const char* password = "J@yGsumm!t";
//----------------------------------------

WebServer server(80);  //--> Server on port 80

#define BME_SDA 21
#define BME_SCL 22
Adafruit_BME280 bme;

//----------------------------------------This routine is executed when you open ESP32 IP Address in browser
void handleRoot() {
  String s = MAIN_page; //--> Read HTML contents
  server.send(200, "text/html", s); //--> Send web page
}
//----------------------------------------

//----------------------------------------Procedure for reading the temperature value of a BME280 sensor
void handleBME280Temperature() {
  float t = bme.readTemperature();
  String Temperature_Value = String(t);
 
  server.send(200, "text/plain", Temperature_Value); //--> Send Temperature value only to client ajax request
  
  Serial.print("BME280 || Temperature : ");
  Serial.print(t);
  Serial.println(" Â°C");
}
//----------------------------------------

//----------------------------------------Procedure for reading humidity values from BME280 sensor
void handleBME280Humidity() {
  float h = bme.readHumidity();
  String Humidity_Value = String(h);
 
  server.send(200, "text/plain", Humidity_Value); //--> Send Humidity value only to client ajax request
  
  Serial.print("BME280 || Humidity : ");
  Serial.print(h);
  Serial.println(" %");
}
//----------------------------------------

//----------------------------------------Setup
void setup(void){
  Serial.begin(115200);
  delay(500);

  Wire.begin(BME_SDA, BME_SCL); //--> Initialize I2C communication for BME280
  if (!bme.begin(0x76)) {
    Serial.println("Could not find a valid BME280 sensor, check wiring!");
    while (1);
  }

  WiFi.begin(ssid, password); //--> Connect to your WiFi router
  Serial.println("");
  
  //----------------------------------------Wait for connection
  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(250);
  }
  //----------------------------------------
  
  Serial.println("");
  Serial.print("Successfully connected to : ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  //----------------------------------------
  
  server.on("/", handleRoot); //--> Routine to handle at root location. This is to display web page.
  server.on("/readTemperature", handleBME280Temperature);  //--> Routine to handle the call procedure handleBME280Temperature
  server.on("/readHumidity", handleBME280Humidity);  //--> Routine to handle the call procedure handleBME280Humidity

  server.begin(); //--> Start server
  Serial.println("HTTP server started");
}
//----------------------------------------

//----------------------------------------Loop
void loop(){
  server.handleClient();  //Handle client requests
}
//----------------------------------------